{"ast":null,"code":"import { axiosWithAuth } from '../../utils/axiosWithAuth';\nimport { FETCH_ISSUES_START, FETCH_ISSUES_SUCCESS, UPVOTE_ISSUE_START, UPVOTE_ISSUE_SUCCESS, DELETE_ISSUE_START, DELETE_ISSUE_SUCCESS, EDIT_ISSUE_START, EDIT_ISSUE_SUCCESS } from '../variables';\nexport const fetchIssues = () => dispatch => {\n  dispatch({\n    type: FETCH_ISSUES_START\n  });\n  axiosWithAuth().get('/issues/all').then(res => {\n    dispatch({\n      type: FETCH_ISSUES_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log('RESPONSEERROR', err);\n  });\n};\nexport const editIssue = replacedIssue => dispatch => {\n  dispatch({\n    type: EDIT_ISSUE_START\n  });\n  console.log('EDITISSUE HAS BEGUN');\n  axiosWithAuth().put(`/issues/${replacedIssue.id}`, replacedIssue).then(res => {\n    console.log('THIS IS THE REDUX EDIT', res);\n    dispatch({\n      type: EDIT_ISSUE_SUCCESS\n    });\n  }).catch(err => console.log('REDUX ERRORRRRRRRRRR', err));\n};\nexport const upvoteIssue = issue => dispatch => {\n  dispatch({\n    type: UPVOTE_ISSUE_START\n  });\n  const currentUpvotes = issue.upvotes;\n  const destructuredIssue = {\n    address_notes: issue.address_notes,\n    author_id: issue.author_id,\n    city: issue.city,\n    created_at: issue.created_at,\n    description: issue.description,\n    downvotes: issue.downvotes,\n    id: issue.id,\n    state: issue.state,\n    status: issue.status,\n    street_address: issue.street_address,\n    title: issue.title,\n    updated_at: issue.updated_at,\n    upvotes: issue.upvotes,\n    zip_code: issue.zip_code\n  };\n  const upvotedIssue = { ...destructuredIssue,\n    upvotes: currentUpvotes + 1\n  };\n  axiosWithAuth().put(`/issues/${issue.id}`, upvotedIssue).then(res => {\n    console.log(res);\n    dispatch({\n      type: UPVOTE_ISSUE_SUCCESS,\n      payload: upvotedIssue\n    });\n  }).catch(err => console.log(err));\n};\nexport const deleteIssue = id => dispatch => {\n  dispatch({\n    type: DELETE_ISSUE_START\n  });\n  axiosWithAuth().delete(`issues/${id}`).then(res => {\n    console.log('THIS IS THE PAYLOAD', id);\n    console.log('THIS IS THE RESPONSE', res);\n    dispatch({\n      type: DELETE_ISSUE_SUCCESS,\n      payload: id\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["/Users/trevor/Documents/projects/front-end/co-make/src/store/actions/issuesActions.js"],"names":["axiosWithAuth","FETCH_ISSUES_START","FETCH_ISSUES_SUCCESS","UPVOTE_ISSUE_START","UPVOTE_ISSUE_SUCCESS","DELETE_ISSUE_START","DELETE_ISSUE_SUCCESS","EDIT_ISSUE_START","EDIT_ISSUE_SUCCESS","fetchIssues","dispatch","type","get","then","res","payload","data","catch","err","console","log","editIssue","replacedIssue","put","id","upvoteIssue","issue","currentUpvotes","upvotes","destructuredIssue","address_notes","author_id","city","created_at","description","downvotes","state","status","street_address","title","updated_at","zip_code","upvotedIssue","deleteIssue","delete"],"mappings":"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","sourcesContent":["import { axiosWithAuth } from '../../utils/axiosWithAuth';\nimport { FETCH_ISSUES_START, FETCH_ISSUES_SUCCESS, \n   UPVOTE_ISSUE_START, UPVOTE_ISSUE_SUCCESS, \n   DELETE_ISSUE_START, DELETE_ISSUE_SUCCESS,\n   EDIT_ISSUE_START, EDIT_ISSUE_SUCCESS \n} from '../variables';\n\nexport const fetchIssues = () => (dispatch) => {\n   dispatch({ type: FETCH_ISSUES_START });\n   axiosWithAuth()\n      .get('/issues/all')\n      .then(res => {\n         dispatch({ type: FETCH_ISSUES_SUCCESS, payload: res.data})\n      })\n      .catch(err => {\n         console.log('RESPONSEERROR', err)\n      })\n}\n\nexport const editIssue = (replacedIssue) => (dispatch) => {\n   dispatch({ type: EDIT_ISSUE_START })\n   console.log('EDITISSUE HAS BEGUN')\n   axiosWithAuth()\n      .put(`/issues/${replacedIssue.id}`, replacedIssue )\n      .then(res => {\n         console.log('THIS IS THE REDUX EDIT', res)\n         dispatch({ type: EDIT_ISSUE_SUCCESS })\n      })\n      .catch(err => console.log('REDUX ERRORRRRRRRRRR', err))\n}\n\nexport const upvoteIssue = (issue) => (dispatch) => {\n   dispatch({ type : UPVOTE_ISSUE_START })\n   const currentUpvotes = issue.upvotes\n   const destructuredIssue = {      \n      address_notes: issue.address_notes,\n      author_id: issue.author_id,\n      city: issue.city,\n      created_at: issue.created_at,\n      description: issue.description,\n      downvotes: issue.downvotes,\n      id: issue.id,\n      state: issue.state,\n      status: issue.status,\n      street_address: issue.street_address,\n      title: issue.title,\n      updated_at: issue.updated_at,\n      upvotes: issue.upvotes,\n      zip_code: issue.zip_code\n   }\n   const upvotedIssue = { ...destructuredIssue, upvotes : currentUpvotes + 1 }\n   axiosWithAuth()\n      .put(`/issues/${issue.id}`, upvotedIssue)\n      .then(res => {\n         console.log(res)\n         dispatch({ type : UPVOTE_ISSUE_SUCCESS, payload: upvotedIssue })\n      })\n      .catch(err => console.log(err))\n}\n\nexport const deleteIssue = (id) => (dispatch) => {\n   dispatch({ type: DELETE_ISSUE_START });\n   axiosWithAuth()\n      .delete(`issues/${id}`)\n      .then(res => {\n         console.log('THIS IS THE PAYLOAD', id)\n         console.log('THIS IS THE RESPONSE', res)\n         dispatch({ type: DELETE_ISSUE_SUCCESS, payload: id })\n      })\n      .catch(err => {\n         console.log(err)\n      })\n}"]},"metadata":{},"sourceType":"module"}