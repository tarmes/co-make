{"ast":null,"code":"var _jsxFileName = \"/Users/trevor/Documents/projects/front-end/co-make/src/components/IssuesList.js\";\nimport React, { useEffect } from 'react';\nimport Issue from './Issue';\nimport { connect } from 'react-redux';\nimport { fetchIssues } from '../store/actions/issuesActions';\n\nfunction IssuesList(props) {\n  const {\n    issues,\n    fetchIssues\n  } = props;\n  useEffect(() => {\n    fetchIssues();\n  }, [fetchIssues]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"component-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"issues-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  }, issues.map(issue => /*#__PURE__*/React.createElement(Issue, {\n    issue: issue,\n    key: issue.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }\n  }))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    issues: state.issuesState.issues,\n    upvoteRequestSending: state.issuesState.upvoteRequestSending\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchIssues\n})(IssuesList);","map":{"version":3,"sources":["/Users/trevor/Documents/projects/front-end/co-make/src/components/IssuesList.js"],"names":["React","useEffect","Issue","connect","fetchIssues","IssuesList","props","issues","map","issue","id","mapStateToProps","state","issuesState","upvoteRequestSending"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,gCAA5B;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAExB,QAAM;AAAEC,IAAAA,MAAF;AAAUH,IAAAA;AAAV,MAA0BE,KAAhC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACbG,IAAAA,WAAW;AACb,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,sBACG;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCG,MAAM,CAACC,GAAP,CAAYC,KAAD,iBACN,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAqB,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CADD,CADH,CADH;AAUF;;AAED,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAChC,SAAO;AACJL,IAAAA,MAAM,EAAEK,KAAK,CAACC,WAAN,CAAkBN,MADtB;AAEJO,IAAAA,oBAAoB,EAAEF,KAAK,CAACC,WAAN,CAAkBC;AAFpC,GAAP;AAIF,CALD;;AAOA,eAAeX,OAAO,CAACQ,eAAD,EAAkB;AAAEP,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport Issue from './Issue';\nimport { connect } from 'react-redux';\nimport { fetchIssues } from '../store/actions/issuesActions';\n\nfunction IssuesList(props) {\n\n   const { issues, fetchIssues } = props;\n\n   useEffect(() => {\n      fetchIssues()\n   }, [fetchIssues]);\n\n   return (\n      <div className='component-container'>\n         <div className='issues-list-container'>\n         {issues.map((issue) => (\n               <Issue issue={issue} key={issue.id}/>\n         ))}\n         </div>\n      </div>\n      \n   )\n}\n\nconst mapStateToProps = (state) => {\n   return {\n      issues: state.issuesState.issues,\n      upvoteRequestSending: state.issuesState.upvoteRequestSending\n   }\n}\n\nexport default connect(mapStateToProps, { fetchIssues })(IssuesList);"]},"metadata":{},"sourceType":"module"}