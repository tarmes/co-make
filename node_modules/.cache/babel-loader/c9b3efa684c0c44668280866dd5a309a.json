{"ast":null,"code":"var _jsxFileName = \"/Users/trevor/Documents/projects/front-end/co-make/src/components/Register.js\";\nimport React, { useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { Form, Button, Label, Input, FormGroup, Col, Row } from 'reactstrap';\nimport axios from 'axios';\nexport default function Register() {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset,\n    watch\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const postNewUser = newUser => {\n    axios.post(\"https://comake-backend-tt76.herokuapp.com/auth/register\", newUser).then(response => {\n      alert(\"You've successfully registered, Welcome!!\");\n      console.log(response);\n    }).catch(error => {\n      console.log(\"There was an error creating the user\", error);\n    });\n  };\n\n  const onSubmit = data => {\n    const zip = parseInt(data.zip_code, 10);\n    const phone = parseInt(data.phone, 10);\n    const newUser = {\n      first_name: data.first_name,\n      email: data.email,\n      last_name: data.last_name,\n      password: data.password,\n      role: \"user\",\n      phone: phone,\n      street_address: data.street_address,\n      city: data.city,\n      state: data.state,\n      zip_code: zip\n    };\n    postNewUser(newUser);\n    reset();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth-form-container  shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"first_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"First name\",\n    name: \"first_name\",\n    invalid: errors.first_name ? true : false,\n    innerRef: register({\n      required: \"First Name is required.\",\n      maxLength: 100\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"first_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"last_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Last name\",\n    name: \"last_name\",\n    invalid: errors.last_name ? true : false,\n    innerRef: register({\n      required: \"Last Name is required.\",\n      maxLength: 100\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"last_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    placeholder: \"email\",\n    name: \"email\",\n    invalid: errors.email ? true : false,\n    innerRef: register({\n      required: \"Email is required\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    invalid: errors.password ? true : false,\n    innerRef: register({\n      required: \"Password is required.\",\n      maxLength: 100\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"confirm_password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Confirm\",\n    name: \"confirm_password\",\n    invalid: errors.confirm_password ? true : false,\n    innerRef: register({\n      validate: value => value === password.current || \"The passwords do not match\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"confirm_password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"tel\",\n    placeholder: \"Phone number\",\n    name: \"phone\",\n    innerRef: register({\n      maxLength: 10\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"street_address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"Street Address\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Street Address\",\n    name: \"street_address\",\n    innerRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"City\",\n    name: \"city\",\n    innerRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"state\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"CA\",\n    name: \"state\",\n    innerRef: register({\n      max: 2\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"zip_code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, \"Zip Code\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    placeholder: \"Zip\",\n    name: \"zip_code\",\n    innerRef: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, \"Sign Up\")));\n}","map":{"version":3,"sources":["/Users/trevor/Documents/projects/front-end/co-make/src/components/Register.js"],"names":["React","useRef","useForm","ErrorMessage","Form","Button","Label","Input","FormGroup","Col","Row","axios","Register","register","handleSubmit","errors","reset","watch","mode","password","current","postNewUser","newUser","post","then","response","alert","console","log","catch","error","onSubmit","data","zip","parseInt","zip_code","phone","first_name","email","last_name","role","street_address","city","state","required","maxLength","confirm_password","validate","value","max"],"mappings":"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","sourcesContent":["import React, { useRef }from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ErrorMessage } from '@hookform/error-message';\nimport {Form, Button, Label, Input, FormGroup, Col, Row} from 'reactstrap'\nimport axios from 'axios'\n\n\n\n\n\nexport default function Register() {\n   const { register, handleSubmit, errors, reset, watch } = useForm({ \n      mode: \"onBlur\",\n\n    });\n\n   const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const postNewUser = (newUser) => { \n    axios.post(\"https://comake-backend-tt76.herokuapp.com/auth/register\", newUser)\n    .then((response) => { \n      alert(\"You've successfully registered, Welcome!!\")\n      console.log(response)\n    })\n    .catch((error) => { \n      console.log(\"There was an error creating the user\", error)\n    })\n\n  }\n\n\n\n\n  const onSubmit = (data) => { \n    const zip = parseInt(data.zip_code, 10)\n    const phone = parseInt(data.phone, 10)\n    \n    const newUser = { \n      first_name: data.first_name,\n      email: data.email,\n      last_name: data.last_name,\n      password: data.password,\n      role: \"user\",\n      phone: phone,\n      street_address: data.street_address,\n      city: data.city,\n      state: data.state,\n      zip_code: zip\n    }\n\n    postNewUser(newUser)\n    reset()\n  }\n    \n\n\n   return (\n    <div className='auth-form-container  shadow' >\n    \n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Row form>\n        <Col md={6}>\n        <FormGroup>\n          <Label for=\"first_name\">First Name</Label>\n          <Input \n          type=\"text\" \n          placeholder=\"First name\" \n          name=\"first_name\" \n          invalid={errors.first_name ? true : false}\n          innerRef={register({required: \"First Name is required.\",  maxLength: 100}, )} \n          />\n          <ErrorMessage errors={errors} name=\"first_name\" />\n\n      </FormGroup>\n      </Col>\n\n      <Col md={6}>\n      <FormGroup>\n        <Label for=\"last_name\">Last Name</Label>\n        <Input \n        type=\"text\" \n        placeholder=\"Last name\" \n        name=\"last_name\" \n        invalid={errors.last_name ? true : false}\n        innerRef={register({required:  \"Last Name is required.\",  maxLength: 100})} \n        />\n        <ErrorMessage errors={errors} name=\"last_name\" />\n      </FormGroup>\n      </Col>\n    </Row>\n      <FormGroup>\n        <Label for=\"email\">Email</Label>\n        <Input \n        type=\"email\" \n        placeholder=\"email\" \n        name=\"email\"\n        invalid={errors.email ? true : false}\n        innerRef={register({required: \"Email is required\"})} \n      \n        />\n        <ErrorMessage errors={errors} name=\"email\" />\n      </FormGroup>\n      <Row form>\n        <Col md={6}>\n        <FormGroup>\n          <Label for=\"password\" >Password</Label>\n          <Input \n          type=\"password\" \n          placeholder=\"Password\" \n          name=\"password\" \n          invalid={errors.password ? true : false}\n          innerRef={register({required: \"Password is required.\",  maxLength: 100}, )} \n          />\n          <ErrorMessage errors={errors} name=\"password\" />\n\n      </FormGroup>\n      </Col>\n\n      <Col md={6}>\n      <FormGroup >\n        <Label for=\"confirm_password\">Confirm Password</Label>\n        <Input \n        type=\"password\" \n        placeholder=\"Confirm\" \n        name=\"confirm_password\" \n        invalid={errors.confirm_password ? true : false}\n        innerRef={register({\n          validate: value =>\n            value === password.current || \"The passwords do not match\"\n        })} \n        />\n        <ErrorMessage errors={errors} name=\"confirm_password\" />\n      </FormGroup>\n      </Col>\n    </Row>\n  \n      <FormGroup>\n        <Label for=\"phone\" >Phone Number</Label>\n        <Input \n        type=\"tel\" \n        placeholder=\"Phone number\" \n        name=\"phone\"\n        innerRef={register({maxLength: 10})}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <Label for=\"street_address\" >Street Address</Label>\n        <Input \n        type=\"text\" \n        placeholder=\"Street Address\" \n        name=\"street_address\"\n        innerRef={register}\n        />\n      </FormGroup>\n    <Row>\n    <Col md={5}>\n      <FormGroup>\n        <Label for=\"city\" >City</Label>\n        <Input \n        type=\"text\" \n        placeholder=\"City\" \n        name=\"city\"\n        innerRef={register}\n        />\n      </FormGroup>\n    </Col>\n    <Col md={3}>\n      <FormGroup>\n        <Label for=\"state\" >State</Label>\n        <Input \n        type=\"text\" \n        placeholder=\"CA\" \n        name=\"state\"\n        innerRef={register({\n          max: 2\n        })}\n        />\n      </FormGroup>\n    </Col>\n    <Col md={4}> \n      <FormGroup>\n        <Label for=\"zip_code\" >Zip Code</Label>\n        <Input \n        type=\"number\" \n        placeholder=\"Zip\" \n        name=\"zip_code\"\n        innerRef={register}\n        />\n      </FormGroup>\n    </Col> \n    </Row> \n\n      <Button type=\"submit\" color=\"primary\">Sign Up</Button>\n      \n    </Form>\n    </div>\n    \n   )\n}"]},"metadata":{},"sourceType":"module"}