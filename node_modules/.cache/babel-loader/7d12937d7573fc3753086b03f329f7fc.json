{"ast":null,"code":"var _jsxFileName = \"/Users/trevor/Documents/projects/front-end/co-make/src/components/Comment.js\";\nimport React, { useState } from 'react';\nimport { Col, Row, Button, FormGroup, Label, Input } from 'reactstrap';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nexport default function Comment(props) {\n  const [addComment, setAddComment] = useState(false);\n  const {\n    id\n  } = props;\n  const {\n    push\n  } = useHistory();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    mode: \"onBlur\",\n    defaultValues: {\n      comment: '',\n      issue_id: id,\n      author_id: 1\n    }\n  });\n\n  const postIssue = comment => {\n    axiosWithAuth().post(`https://comake-backend-tt76.herokuapp.com/issues/comment`, comment).then(res => {\n      console.log(res);\n      push('/');\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onSubmit = newComment => {\n    const comment = {\n      comment: newComment.comment,\n      issue_id: id.id,\n      author_id: id.id\n    };\n    postIssue(comment);\n    setAddComment(!addComment);\n    console.log(comment);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: `comment-button ${addComment === true ? 'disappear' : ''}`,\n    onClick: () => setAddComment(!addComment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Comment\")), addComment && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, \"New Comment:\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"comment\",\n    invalid: errors.comment ? true : false,\n    innerRef: register({\n      required: \"A comment is required and needs to be 5 characters long\",\n      minLength: 5\n    }),\n    placeholder: \"Type here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    id: \"comment-submit-btn\",\n    onClick: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    id: \"comment-cancel-btn\",\n    onClick: () => setAddComment(!addComment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Cancel\")));\n}","map":{"version":3,"sources":["/Users/trevor/Documents/projects/front-end/co-make/src/components/Comment.js"],"names":["React","useState","Col","Row","Button","FormGroup","Label","Input","ErrorMessage","useForm","useHistory","axiosWithAuth","Comment","props","addComment","setAddComment","id","push","register","handleSubmit","errors","mode","defaultValues","comment","issue_id","author_id","postIssue","post","then","res","console","log","catch","err","onSubmit","newComment","required","minLength"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Col, Row, Button, FormGroup, Label, Input } from 'reactstrap';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { useForm } from 'react-hook-form'\nimport { useHistory } from 'react-router-dom'\nimport {axiosWithAuth} from '../utils/axiosWithAuth'\n\nexport default function Comment(props){\n    const [addComment, setAddComment] = useState(false);\n    const {id} = props;\n    const { push } = useHistory();\n\n    const { register, handleSubmit, errors} = useForm({ \n        mode: \"onBlur\",\n        defaultValues: { \n            comment: '',\n            issue_id: id,\n            author_id: 1\n        } \n    });\n\n    const postIssue = (comment) => {\n        axiosWithAuth()\n            .post(`https://comake-backend-tt76.herokuapp.com/issues/comment`, comment)\n            .then(res => {\n                console.log(res)\n                push('/')\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    const onSubmit = (newComment) => { \n        const comment = {\n            comment: newComment.comment,\n            issue_id: id.id,\n            author_id: id.id\n        }\n        postIssue(comment)\n        setAddComment(!addComment)\n        console.log(comment)\n        \n    }\n\n    return (\n        <div>\n            <div>\n                <Button className={`comment-button ${addComment === true ? 'disappear' : ''}`} onClick={() => setAddComment(!addComment)}>Comment</Button>\n            </div>\n            {addComment && <div >\n                <Row form>\n                    <Col md={12}>\n                        <FormGroup>\n                            <Label for='comment'>New Comment:</Label>\n                            <Input \n                                type='textarea' \n                                name='comment' \n                                invalid={errors.comment ? true : false}\n                                innerRef={register({required: \"A comment is required and needs to be 5 characters long\", minLength: 5})} \n                                placeholder='Type here'\n                            />\n                            <ErrorMessage errors={errors} name='comment' />\n                        </FormGroup>\n                    </Col>\n                </Row> \n                <Button id='comment-submit-btn' onClick={handleSubmit(onSubmit)}>Submit</Button>  \n                <Button id='comment-cancel-btn' onClick={() => setAddComment(!addComment)}>Cancel</Button>\n            </div>}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}