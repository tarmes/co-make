{"ast":null,"code":"var _jsxFileName = \"/Users/trevor/Documents/projects/front-end/co-make/src/components/Issue.js\";\nimport React from 'react';\nimport { Card, CardText, CardBody, CardTitle, Button, ListGroup, ListGroupItem, CardImg } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { upvoteIssue as upvote } from '../store/actions/issuesActions';\nimport { useHistory } from 'react-router-dom';\nimport Comment from './Comment';\n\nfunction Issue(props) {\n  const {\n    issue,\n    upvote,\n    isLoggedIn\n  } = props;\n  const {\n    push\n  } = useHistory();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"issue-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    className: \" mb-3\",\n    tag: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }\n  }, issue.title), /*#__PURE__*/React.createElement(CardText, {\n    className: \" mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }\n  }, \"Description: \", issue.description), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }\n  }, issue.street_address, \", \", issue.city, \", \", issue.state, \" \", issue.zip_code), /*#__PURE__*/React.createElement(CardImg, {\n    alt: \"nope\",\n    src: \"https://source.unsplash.com/600x400/?construction,signs\",\n    top: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"comment-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }\n  }, issue.comments.map(comment => /*#__PURE__*/React.createElement(ListGroupItem, {\n    key: comment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }\n  }, comment.comment))), isLoggedIn ? /*#__PURE__*/React.createElement(Button, {\n    className: \"edit-button\",\n    onClick: () => push(`/editIssue/${issue.id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 31\n    }\n  }, \"Edit\") : null, /*#__PURE__*/React.createElement(Button, {\n    className: \"upvote-button\",\n    onClick: () => upvote(issue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }\n  }, \"Upvote\"), isLoggedIn ? /*#__PURE__*/React.createElement(Comment, {\n    id: issue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 31\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"upvotes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-heart\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 40\n    }\n  }), \" \", issue.upvotes))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.userState.isLoggedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  upvote\n})(Issue);","map":{"version":3,"sources":["/Users/trevor/Documents/projects/front-end/co-make/src/components/Issue.js"],"names":["React","Card","CardText","CardBody","CardTitle","Button","ListGroup","ListGroupItem","CardImg","connect","upvoteIssue","upvote","useHistory","Comment","Issue","props","issue","isLoggedIn","push","title","description","street_address","city","state","zip_code","comments","map","comment","id","upvotes","mapStateToProps","userState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n   Card, CardText, CardBody,\n   CardTitle, Button, ListGroup, ListGroupItem, CardImg\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { upvoteIssue as upvote} from '../store/actions/issuesActions'\nimport { useHistory } from 'react-router-dom'\nimport Comment from './Comment'\n\nfunction Issue(props) {\n\n   const { issue, upvote, isLoggedIn } = props;\n   const {push} = useHistory();\n\n   return (\n      <div className='issue-container'>\n         <Card>\n            <CardBody className='card-body'>\n               <CardTitle className=\" mb-3\" tag=\"h3\">{issue.title}</CardTitle>\n               <CardText className=' mb-4'>Description: {issue.description}</CardText>\n               <CardText>{issue.street_address}, {issue.city}, {issue.state} {issue.zip_code}</CardText>\n               <CardImg\n                  alt=\"nope\"\n                  src=\"https://source.unsplash.com/600x400/?construction,signs\"\n                  top\n               ></CardImg>\n               <ListGroup className='comment-group'>\n                  {issue.comments.map(comment => (\n                     <ListGroupItem \n                        key={comment.id}>\n                           {comment.comment}\n                     </ListGroupItem>\n                  ))}\n               </ListGroup>\n               { isLoggedIn ? <Button className='edit-button' onClick={() => push(`/editIssue/${issue.id}`)}>Edit</Button> : null}\n               <Button className='upvote-button' onClick={() => upvote(issue)}>Upvote</Button>\n               { isLoggedIn ? <Comment id={issue}></Comment> : null }\n               <h6 className='upvotes'><i className='fas fa-heart' aria-hidden=\"true\"/> {issue.upvotes}</h6>\n            </CardBody>\n         </Card>\n      </div>\n   )\n}\n\nconst mapStateToProps = (state) => {\n   return {\n   isLoggedIn: state.userState.isLoggedIn\n   }\n}\n\nexport default connect(mapStateToProps, { upvote })(Issue);\n"]},"metadata":{},"sourceType":"module"}