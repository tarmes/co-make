{"ast":null,"code":"var _jsxFileName = \"/Users/trevor/Documents/projects/front-end/co-make/src/components/AddNewIssue.js\";\nimport React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nexport default function AddNewIssue() {\n  const {\n    push\n  } = useHistory();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    mode: \"onBlur\",\n    defaultValues: {\n      author_id: 0,\n      title: '',\n      description: '',\n      street_address: '',\n      address_notes: '',\n      city: '',\n      state: '',\n      zip_code: ''\n    }\n  });\n\n  const postIssue = newIssue => {\n    axiosWithAuth().post('https://comake-backend-tt76.herokuapp.com/issues', newIssue).then(res => {\n      console.log('result from API', res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onSubmit = newIssue => {\n    newIssue.author_id = 3;\n    console.log(newIssue);\n    postIssue(newIssue);\n    setTimeout(() => {\n      push(`/`);\n    }, 1000);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-issue-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Report an Issue\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-issue-form-img-parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-issue-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 37\n    }\n  }, \"Title of Report\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"title\",\n    invalid: errors.title ? true : false // onChange={onChange}\n    ,\n    innerRef: register({\n      required: \"A title is required\"\n    }),\n    placeholder: \"Pothole, etc.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 37\n    }\n  }, \"Description of problem\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"description\",\n    invalid: errors.description ? true : false,\n    innerRef: register({\n      required: \"A description is required and needs to be 10 characters long\",\n      minLength: 10\n    }),\n    placeholder: \"What seems to be the issue?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"street_address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 37\n    }\n  }, \"Incident Location\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"street_address\",\n    innerRef: register,\n    placeholder: \"1234 Main St (optional)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"address_notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, \"Special Instructions\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"address_notes\",\n    innerRef: register,\n    placeholder: \"Is there anything else you need us to know about the location of the issue? (optional)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 37\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"city\",\n    invalid: errors.city ? true : false,\n    innerRef: register({\n      required: \"City is required\"\n    }),\n    placeholder: \"New York, Chicago, etc.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"state\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 37\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"state\",\n    invalid: errors.state ? true : false,\n    innerRef: register({\n      required: \"State is required\"\n    }),\n    placeholder: \"New York, NY, etc.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"state\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"zip_code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 37\n    }\n  }, \"Zip Code\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"zip_code\",\n    invalid: errors.zip_code ? true : false,\n    innerRef: register({\n      required: \"Zip code is required\"\n    }),\n    placeholder: \"12345, etc.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    errors: errors,\n    name: \"zip_code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"add-issue-submit-btn\",\n    onClick: handleSubmit(onSubmit),\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    id: \"add-issue-clear-btn\",\n    onClick: () => push('/'),\n    outline: true,\n    color: \"secondary\",\n    size: \"lg\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, \"Cancel\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-issue-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://images.unsplash.com/photo-1533153900060-648d6009083a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n    alt: \"graphic of road construction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/trevor/Documents/projects/front-end/co-make/src/components/AddNewIssue.js"],"names":["React","Col","Row","Button","Form","FormGroup","Label","Input","ErrorMessage","useForm","useHistory","axiosWithAuth","AddNewIssue","push","register","handleSubmit","errors","mode","defaultValues","author_id","title","description","street_address","address_notes","city","state","zip_code","postIssue","newIssue","post","then","res","console","log","catch","err","onSubmit","setTimeout","required","minLength"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { useForm } from 'react-hook-form'\nimport { useHistory } from 'react-router-dom'\nimport {axiosWithAuth} from '../utils/axiosWithAuth'\n\n\nexport default function AddNewIssue(){\n    const { push } = useHistory()\n    const { register, handleSubmit, errors } = useForm({ \n        mode: \"onBlur\",\n        defaultValues: { \n            author_id: 0,\n            title: '',\n            description: '',\n            street_address: '',\n            address_notes: '',\n            city: '',\n            state: '',\n            zip_code: '',\n        } \n    });\n\n    const postIssue = (newIssue) =>{axiosWithAuth().post('https://comake-backend-tt76.herokuapp.com/issues', newIssue)\n      .then(res => {\n        console.log('result from API', res)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    }\n    \n    const onSubmit = (newIssue) => { \n        newIssue.author_id = 3\n        console.log(newIssue)\n        postIssue(newIssue)\n        setTimeout(() => {\n            push(`/`);\n          }, 1000)\n    }\n\n    return (\n        <div className='new-issue-container'>\n            <h3>Report an Issue</h3>\n            <div className='new-issue-form-img-parent'>\n                <div className='new-issue-form'>\n                    <Form>\n                        <Row form>\n                            <Col md={4}/>\n                            <Col md={4}>\n                                <FormGroup>\n                                    <Label for='title'>Title of Report</Label>\n                                    <Input \n                                        type='text' \n                                        name='title' \n                                        invalid={errors.title ? true : false}\n                                        // onChange={onChange}\n                                        innerRef={register({required: \"A title is required\"})} \n                                        placeholder='Pothole, etc.'\n                                    />\n                                    <ErrorMessage errors={errors} name='title' />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <Row form>\n                            <Col md={1}/>\n                            <Col md={10}>\n                                <FormGroup>\n                                    <Label for='description'>Description of problem</Label>\n                                    <Input \n                                        type='textarea' \n                                        name='description' \n                                        invalid={errors.description ? true : false}\n                                        innerRef={register({required: \"A description is required and needs to be 10 characters long\", minLength: 10})} \n                                        placeholder='What seems to be the issue?'\n                                    />\n                                    <ErrorMessage errors={errors} name='description' />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <Row form>\n                            <Col md={3}/>\n                            <Col md={3}>\n                                <FormGroup>\n                                    <Label for='street_address'>Incident Location</Label>\n                                    <Input \n                                        type='text' \n                                        name='street_address' \n                                        innerRef={register} \n                                        placeholder='1234 Main St (optional)'\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col md={3}>\n                                <FormGroup>\n                                    <Label for='address_notes'>Special Instructions</Label>\n                                    <Input \n                                        type='text' \n                                        name='address_notes'\n                                        innerRef={register} \n                                        placeholder='Is there anything else you need us to know about the location of the issue? (optional)'\n                                    />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <Row form>\n                            \n                        </Row>\n                        <Row form>\n                            <Col md={2}/> \n                            {/* centering the city, state and zip_code  */}\n                            <Col md={3}>\n                                <FormGroup>\n                                    <Label for='city'>City</Label>\n                                    <Input \n                                        type='text' \n                                        name='city' \n                                        invalid={errors.city ? true : false}\n                                        innerRef={register({required: \"City is required\"})}\n                                        placeholder='New York, Chicago, etc.'\n                                    />\n                                    <ErrorMessage errors={errors} name='city' />\n                                </FormGroup>\n                            </Col>\n                            <Col md={3}>\n                                <FormGroup>\n                                    <Label for='state'>State</Label>\n                                    <Input \n                                        type='text' \n                                        name='state' \n                                        invalid={errors.state ? true : false}\n                                        innerRef={register({required: \"State is required\"})}\n                                        placeholder='New York, NY, etc.'\n                                    />\n                                    <ErrorMessage errors={errors} name='state' />\n                                </FormGroup>\n                            </Col>\n                            <Col md={2}> \n                                <FormGroup>\n                                    <Label for='zip_code'>Zip Code</Label>\n                                    <Input \n                                        type='text' \n                                        name='zip_code' \n                                        invalid={errors.zip_code ? true : false}\n                                        innerRef={register({required: \"Zip code is required\"})}\n                                        placeholder='12345, etc.'\n                                    />\n                                    <ErrorMessage errors={errors} name='zip_code' />\n                                </FormGroup>\n                            </Col>\n                            <Col md={2}/>\n                        </Row>\n                        <Row form>\n                            <Button id='add-issue-submit-btn' onClick={handleSubmit(onSubmit)}  size=\"lg\" >Submit</Button>\n                            <Button id='add-issue-clear-btn' onClick={() => push('/')}outline color=\"secondary\" size=\"lg\" block>Cancel</Button>\n                        </Row>\n                    </Form>\n                </div>\n                <div className='new-issue-img'>\n                <img\n                    src='https://images.unsplash.com/photo-1533153900060-648d6009083a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60' \n                    alt='graphic of road construction'\n                />\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}